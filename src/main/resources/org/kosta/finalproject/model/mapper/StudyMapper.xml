<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.kosta.finalproject.model.mapper.StudyMapper">

    <resultMap id="studyMemberDTOMap" type="org.kosta.finalproject.model.domain.StudyMemberDTO">
        <id property="email" column="email"/>
        <result property="studyMemberRole" column="study_member_role"/>
        <association property="memberDTO" resultMap="memberDTOMap" columnPrefix="m_"/>
        <association property="studyDTO" resultMap="studyDTOMap" columnPrefix="s_"/>
    </resultMap>

    <resultMap id="memberDTOMap" type="org.kosta.finalproject.model.domain.MemberDTO">
        <id property="email" column="email"/>
        <result property="name" column="name"/>
        <result property="picture" column="picture"/>
    </resultMap>

    <resultMap id="studyDTOMap" type="org.kosta.finalproject.model.domain.StudyDTO">
        <id property="studyNo" column="study_no"/>
        <result property="studyName" column="study_name"/>
        <result property="studyDesc" column="study_desc"/>
        <result property="studyRegdate" column="study_regdate"/>
        <association property="studyStateDTO" resultMap="studyStateDTOMap" columnPrefix="sst_"/>
        <association property="categoryTypeDTO" resultMap="categoryTypeDTOMap" columnPrefix="ctt_"/>
        <association property="categoryLangDTO" resultMap="categoryLangDTOMap" columnPrefix="clt_"/>
    </resultMap>

    <resultMap id="studyStateDTOMap" type="org.kosta.finalproject.model.domain.StudyStateDTO">
        <result property="studyState" column="study_state"/>
    </resultMap>

    <resultMap id="categoryTypeDTOMap" type="org.kosta.finalproject.model.domain.CategoryTypeDTO">
        <result property="categoryType" column="category_type"/>
    </resultMap>

    <resultMap id="categoryLangDTOMap" type="org.kosta.finalproject.model.domain.CategoryLangDTO">
        <result property="categoryLang" column="category_lang"/>
    </resultMap>

    <select id="getAllStudyList" resultMap="studyMemberDTOMap">
        select m.name            as m_name,
               m.PICTURE         as m_picture,
               s.STUDY_NO        as s_study_no,
               s.STUDY_NAME      as s_study_name,
               s.STUDY_DESC      as s_study_desc,
               s.STUDY_REGDATE   as s_study_regdate,
               sst.STUDY_STATE   as s_sst_study_state,
               ctt.category_type as s_ctt_category_type,
               clt.category_lang as s_clt_category_lang
        from member m,
             STUDY_MEMBER sm,
             STUDY s,
             STUDY_STATE_TABLE sst,
             category_type_table ctt,
             category_lang_table clt
        where m.EMAIL = sm.EMAIL
          and s.STUDY_NO = sm.STUDY_NO
          and s.STUDY_STATE_CODE = sst.STUDY_STATE_CODE
          and s.category_lang_no = clt.category_lang_no
          and s.category_type_no = ctt.category_type_no
          and sm.STUDY_MEMBER_ROLE = '스터디리더'
        order by s.STUDY_NO desc
    </select>

    <select id="getStudyList3" resultMap="studyMemberDTOMap">
        select s.name                                 as m_name,
               s.PICTURE                              as m_picture,
               s.STUDY_NO                             as s_study_no,
               s.STUDY_NAME                           as s_study_name,
               s.STUDY_DESC                           as s_study_desc,
               to_char(s.STUDY_REGDATE, 'yyyy-mm-dd') as s_study_regdate,
               s.STUDY_STATE                          as s_sst_study_state,
               s.category_type                        as s_ctt_category_type,
               s.category_lang                        as s_clt_category_lang
        from (
                 select m.name,
                        m.PICTURE,
                        s.STUDY_NO,
                        s.STUDY_NAME,
                        s.STUDY_DESC,
                        s.STUDY_REGDATE,
                        sst.STUDY_STATE,
                        ctt.category_type,
                        clt.category_lang
                 from member m,
                      STUDY_MEMBER sm,
                      STUDY s,
                      STUDY_STATE_TABLE sst,
                      category_type_table ctt,
                      category_lang_table clt
                 where m.EMAIL = sm.EMAIL
                   and s.STUDY_NO = sm.STUDY_NO
                   and s.STUDY_STATE_CODE = sst.STUDY_STATE_CODE
                   and s.category_lang_no = clt.category_lang_no
                   and s.category_type_no = ctt.category_type_no
                   and sm.STUDY_MEMBER_ROLE = '스터디리더'
                   and sst.study_state != '종료'
                 order by study_no desc
             ) s
        where <![CDATA[ROWNUM <= 6
        ]]>
    </select>

    <!-- 스터디 등록 -->
    <insert id="registerStudy" parameterType="HashMap">
        insert into study(STUDY_NO, STUDY_NAME, STUDY_INFO, STUDY_DESC, STUDY_REGDATE, CATEGORY_TYPE_NO,
        CATEGORY_LANG_NO
        )
        values (STUDY_SEQ.nextval, #{studyName}, #{studyInfo}, #{studyDesc}, sysdate,
        #{categoryTypeNo}, #{categoryLangNo})
        <selectKey keyProperty="studyNo" resultType="int" order="AFTER">
            SELECT STUDY_SEQ.CURRVAL FROM DUAL
        </selectKey>
    </insert>

    <!-- 스터디 등록 후 직책 등록 -->
    <insert id="registerStudyMemberRole" parameterType="String">
        insert into study_member
        values (#{value}, STUDY_SEQ.currval, '스터디리더')
    </insert>

    <!--스터디 정보 조회 -->
    <select id="getStudyDetailByStudyNo" resultType="HashMap">
        select m.EMAIL,
               m.NAME,
               m.PICTURE,
               sm.STUDY_MEMBER_ROLE,
               s.STUDY_NO,
               s.STUDY_NAME,
               s.STUDY_DESC,
               DBMS_LOB.SUBSTR(s.STUDY_INFO, DBMS_LOB.GETLENGTH(s.STUDY_INFO)) AS STUDY_INFO,
               to_char(s.STUDY_REGDATE, 'YYYY-MM-DD HH24:MI:SS')               AS STUDY_REGDATE,
               sst.STUDY_STATE,
               ctt.category_type,
               ctt.category_type_no,
               clt.category_lang,
               clt.category_lang_no
        from member m,
             STUDY_MEMBER sm,
             STUDY s,
             STUDY_STATE_TABLE sst,
             category_type_table ctt,
             category_lang_table clt
        where m.EMAIL = sm.EMAIL
          and s.STUDY_NO = sm.STUDY_NO
          and s.STUDY_STATE_CODE = sst.STUDY_STATE_CODE
          and s.category_lang_no = clt.category_lang_no
          and s.category_type_no = ctt.category_type_no
          and sm.STUDY_MEMBER_ROLE = '스터디리더'
          and s.study_no = #{value}
    </select>

    <!-- 스터디 번호로 스터디 구성원 역할 조회 -->
    <select id="findStudyMemberRoleByStudyNo" resultType="String">
        SELECT STUDY_MEMBER_ROLE
        FROM STUDY_MEMBER
        WHERE STUDY_NO = #{param1}
          AND EMAIL = #{param2}
    </select>

    <!-- 스터디 정보 수정 -->
    <update id="modifyStudy" parameterType="HashMap">
        UPDATE STUDY
        SET STUDY_NAME       = #{studyName},
            STUDY_DESC       = #{studyDesc},
            STUDY_INFO       = #{studyInfo},
            CATEGORY_TYPE_NO = #{categoryTypeNo},
            CATEGORY_LANG_NO = #{categoryLangNo}
        WHERE STUDY_NO = #{studyNo}
    </update>

    <!-- 스터디 삭제 -->
    <delete id="deleteStudyByStudyNo" parameterType="int">
        DELETE
        FROM STUDY
        WHERE STUDY_NO = #{value}
    </delete>

    <!--나의 스터디 리스트 조회-->
    <select id="getMystudyListByEmail" resultMap="studyMemberDTOMap">
        select sm.email          as sm_email,
               sm.STUDY_MEMBER_ROLE,
               s.STUDY_NO        as s_study_no,
               s.STUDY_NAME      as s_study_name,
               sSt.STUDY_STATE   as s_sst_study_state,
               ctt.CATEGORY_TYPE as s_ctt_category_type,
               clt.CATEGORY_LANG as s_clt_category_lang
        from STUDY_MEMBER sm,
             STUDY s,
             STUDY_STATE_TABLE SST,
             CATEGORY_TYPE_TABLE CTT,
             CATEGORY_LANG_TABLE CLT
        where sm.STUDY_NO = s.STUDY_NO
          and s.STUDY_STATE_CODE = sst.STUDY_STATE_CODE
          and s.CATEGORY_TYPE_NO = ctt.CATEGORY_TYPE_NO
          and s.CATEGORY_LANG_NO = clt.CATEGORY_LANG_NO
          and sm.EMAIL = #{value}
        order by s.STUDY_NO desc
    </select>

    <select id="getTotalCountOfStudyList" resultType="int">
        select count(*)
        from study
    </select>

    <select id="getStudyListByPageNo" resultMap="studyMemberDTOMap">
        select s.rnum,
               s.name                                 as m_name,
               s.PICTURE                              as m_picture,
               s.STUDY_NO                             as s_study_no,
               s.STUDY_NAME                           as s_study_name,
               s.STUDY_DESC                           as s_study_desc,
               to_char(s.STUDY_REGDATE, 'yyyy-mm-dd') as s_study_regdate,
               s.STUDY_STATE                          as s_sst_study_state,
               s.category_type                        as s_ctt_category_type,
               s.category_lang                        as s_clt_category_lang
        from (
                 select row_number() over(order by s.study_regdate desc) as rnum, m.name,
                        m.PICTURE,
                        s.STUDY_NO,
                        s.STUDY_NAME,
                        s.STUDY_DESC,
                        s.STUDY_REGDATE,
                        sst.STUDY_STATE,
                        ctt.category_type,
                        clt.category_lang
                 from member m,
                      STUDY_MEMBER sm,
                      STUDY s,
                      STUDY_STATE_TABLE sst,
                      category_type_table ctt,
                      category_lang_table clt
                 where m.EMAIL = sm.EMAIL
                   and s.STUDY_NO = sm.STUDY_NO
                   and s.STUDY_STATE_CODE = sst.STUDY_STATE_CODE
                   and s.category_lang_no = clt.category_lang_no
                   and s.category_type_no = ctt.category_type_no
                   and sm.STUDY_MEMBER_ROLE = '스터디리더'
                   and sst.study_state != '종료'
                 order by study_no desc
             ) s
        where s.rnum between #{startRowNumber} and #{endRowNumber}
    </select>

    <!--스터디 상태 업데이트-->
    <update id="updateState">
        update study set STUDY_STATE_CODE=#{studyState} where STUDY_NO=#{studyNo}
    </update>

    <select id="getTotalCountOfStudyListByCategory" parameterType="String" resultType="int">
        select count(*)
        from member m,
             STUDY_MEMBER sm,
             STUDY s,
             STUDY_STATE_TABLE sst,
             category_type_table ctt,
             category_lang_table clt
        where m.EMAIL = sm.EMAIL
          and s.STUDY_NO = sm.STUDY_NO
          and s.STUDY_STATE_CODE = sst.STUDY_STATE_CODE
          and s.category_lang_no = clt.category_lang_no
          and s.category_type_no = ctt.category_type_no
          and sm.STUDY_MEMBER_ROLE = '스터디리더'
          and (clt.category_lang = #{value} or ctt.category_type = #{value})
    </select>

    <select id="getStudyListByCategoryAndPageNo" resultMap="studyMemberDTOMap">
        select s.rnum,
               s.name                                 as m_name,
               s.PICTURE                              as m_picture,
               s.STUDY_NO                             as s_study_no,
               s.STUDY_NAME                           as s_study_name,
               s.STUDY_DESC                           as s_study_desc,
               to_char(s.STUDY_REGDATE, 'yyyy-mm-dd') as s_study_regdate,
               s.STUDY_STATE                          as s_sst_study_state,
               s.category_type                        as s_ctt_category_type,
               s.category_lang                        as s_clt_category_lang
        from (
                 select row_number() over(order by s.study_regdate desc) as rnum, m.name,
                        m.PICTURE,
                        s.STUDY_NO,
                        s.STUDY_NAME,
                        s.STUDY_DESC,
                        s.STUDY_REGDATE,
                        sst.STUDY_STATE,
                        ctt.category_type,
                        clt.category_lang
                 from member m,
                      STUDY_MEMBER sm,
                      STUDY s,
                      STUDY_STATE_TABLE sst,
                      category_type_table ctt,
                      category_lang_table clt
                 where m.EMAIL = sm.EMAIL
                   and s.STUDY_NO = sm.STUDY_NO
                   and s.STUDY_STATE_CODE = sst.STUDY_STATE_CODE
                   and s.category_lang_no = clt.category_lang_no
                   and s.category_type_no = ctt.category_type_no
                   and sm.STUDY_MEMBER_ROLE = '스터디리더'
                   and (clt.category_lang = #{category} or ctt.category_type = #{category})
                 order by study_no desc
             ) s
        where s.rnum between #{startRowNumber} and #{endRowNumber}
    </select>

    <select id="getTotalCountOfStudyListBySearch" resultType="int">
        select count(*)
        from member m,
             STUDY_MEMBER sm,
             STUDY s,
             STUDY_STATE_TABLE sst,
             category_type_table ctt,
             category_lang_table clt
        where m.EMAIL = sm.EMAIL
          and s.STUDY_NO = sm.STUDY_NO
          and s.STUDY_STATE_CODE = sst.STUDY_STATE_CODE
          and s.category_lang_no = clt.category_lang_no
          and s.category_type_no = ctt.category_type_no
          and (s.STUDY_NAME like '%' || #{value} || '%' or s.STUDY_DESC like '%' || #{value} || '%')
          and sm.STUDY_MEMBER_ROLE = '스터디리더'
        order by s.STUDY_NO desc
    </select>

    <select id="getStudyListBySearch" resultMap="studyMemberDTOMap">
        select s.rnum,
               s.name                                 as m_name,
               s.PICTURE                              as m_picture,
               s.STUDY_NO                             as s_study_no,
               s.STUDY_NAME                           as s_study_name,
               s.STUDY_DESC                           as s_study_desc,
               study_regdate                          as s_study_regdate,
               s.STUDY_STATE                          as s_sst_study_state,
               s.category_type                        as s_ctt_category_type,
               s.category_lang                        as s_clt_category_lang
        from (
                 select row_number() over (order by s.study_regdate desc) as rnum,
                         m.name                                            as name,
                        m.PICTURE                                         as picture,
                        s.STUDY_NO                                        as study_no,
                        s.STUDY_NAME                                      as study_name,
                        s.STUDY_DESC                                      as study_desc,
                        to_char(s.STUDY_REGDATE, 'yyyy-mm-dd')            as study_regdate,
                        sst.STUDY_STATE                                   as study_state,
                        ctt.category_type                                 as category_type,
                        clt.category_lang                                 as category_lang
                 from member m,
                      STUDY_MEMBER sm,
                      STUDY s,
                      STUDY_STATE_TABLE sst,
                      category_type_table ctt,
                      category_lang_table clt
                 where m.EMAIL = sm.EMAIL
                   and s.STUDY_NO = sm.STUDY_NO
                   and s.STUDY_STATE_CODE = sst.STUDY_STATE_CODE
                   and s.category_lang_no = clt.category_lang_no
                   and s.category_type_no = ctt.category_type_no
                   and (s.STUDY_NAME like '%' || #{search} || '%' or s.STUDY_DESC like '%' || #{search} || '%')
                   and sm.STUDY_MEMBER_ROLE = '스터디리더'
                 order by s.STUDY_NO desc
             ) s
        where s.rnum between #{startRowNumber} and #{endRowNumber}
    </select>

    <!-- 나의 스터디에 해당하는 내가 제출한 과제의 수 반환하기 -->
    <select id="getStudyMyTaskCount" resultType="int">
        select count(*)
        from submit_comment
        where study_no = #{studyNo} and email = #{email}
    </select>

    <!-- 내 스터디에 올라온 과제의 수 -->
    <select id="getStudyAllTaskCount" resultType="int">
        select count(*)
        from task
        where study_no = #{studyNo}
    </select>

</mapper>
